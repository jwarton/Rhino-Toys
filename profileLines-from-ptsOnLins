Option Explicit

Call Main()
Sub Main()
	Dim centroid,pt
	Dim vector
	Dim depth, width
	Dim profile, lines
	Dim i,j, bounds
	Dim ptCnt
	
	depth = 25
	width = 10
	
	'pick lines
	vector = Rhino.GetObject("select line", 4)
	'pick points
	pt = Rhino.GetObjects("select points", 1)
	ptCnt = Ubound(pt)
	
	For i = 0 To ptCnt
		pt(i) = Rhino.PointCoordinates(pt(i))
		profile = profileFunction(depth, width, pt(i), vector)
		bounds = Ubound(profile(0))
	
		For j = 0  To bounds
			If j < bounds Then
				lines = Rhino.AddLine(profile(0)(j), profile(0)(j + 1))
			Else
				lines = Rhino.AddLine(profile(0)(j), profile(0)(0))
			End If
		Next
	Next	
End Sub

Function profileFunction(depth, width, pt, line)
	Dim ptS,ptE,vector
	Dim length
	Dim x,y,z
	Dim x1,y1,z1
	Dim x2,y2,z2
	Dim x3,y3,z3
	Dim x4,y4,z4
	Dim pt1,pt2,pt3,pt4
	Dim arrPts(1),arrXform
	
	ptS = Rhino.CurveStartPoint(line)
	ptE = Rhino.CurveEndPoint(line)
	vector = Rhino.VectorCreate(ptE, ptS)
	length = Rhino.Distance(ptS, pt)	
	
	''points define profile positions
	x = ptS(0)
	y = ptS(1)
	z = ptS(2)
		
	''' points define rectangular profile
	x1 = (x + (length))
	y1 = (y + (width / 2))
	z1 = (z - (depth / 2))
		
	x2 = (x + (length))
	y2 = (y - (width / 2))
	z2 = (z - (depth / 2))
		
	x3 = (x + (length))
	y3 = (y - (width / 2))
	z3 = (z + (depth / 2))
		
	x4 = (x + (length))
	y4 = (y + (width / 2))
	z4 = (z + (depth / 2))
		
	pt1 = array(x1, y1, z1)
	pt2 = array(x2, y2, z2)
	pt3 = array(x3, y3, z3)
	pt4 = array(x4, y4, z4)
	
	arrPts(0) = array(pt1, pt2, pt3, pt4)
	arrXform = Rhino.XformRotation(Array(1, 0, 0), vector, ptS)
	arrPts(0) = Rhino.PointArrayTransform(arrPts(0), arrXform)
	profileFunction = arrPts
End Function
